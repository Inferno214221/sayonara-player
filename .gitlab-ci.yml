image: "registry.gitlab.com/luciocarreras/sayonara-player:focal"
stages:
  - build
  - test
  - packaging
  - deploy


# Build
build-sayonara:
  stage: build
  script:
    - cmake --preset=ci -DGIT_REVISION="${CI_COMMIT_SHORT_SHA}"
    - cd build
    - make -j`nproc`
    - make install DESTDIR=AppDir
  artifacts:
    untracked: true
    expire_in: 1 day
  only:
    - merge_requests
    - tags


# Unit tests
test-sayonara:
  stage: test
  dependencies:
    - build-sayonara
  variables:
    QT_QPA_PLATFORM: "offscreen"
  script:
    - cd build
    - make test
  artifacts:
    when: on_failure
    untracked: true
    expire_in: 2 days
  only:
    - merge_requests
    - tags


# Fedora
## Package Fedora
package-fedora:
  image: "fedora:latest"
  stage: packaging
  variables:
    RPM_BUILD_NCPUS: 1
  script:
    - dnf --refresh --assumeyes makecache
    - dnf --assumeyes install git make cmake gcc-c++ desktop-file-utils libappstream-glib libnotify-devel qt5-qtbase-devel qt5-qttools-devel qt5-qtsvg-devel gstreamer1-plugins-base-devel taglib-devel zlib-devel hicolor-icon-theme auto-buildrequires
    - rm -rf build && mkdir build && cd build
    - cmake ..
    - cd ..
    - dist/rpm/fedora-rpm.sh ${CI_COMMIT_SHA} ./build/dist/sayonara.spec
  artifacts:
    paths:
      - /root/rpmbuild/RPMS
    expire_in: 1 day
  when: manual


# AppImage
## Package AppImage
package-appimage:
  stage: packaging
  dependencies:
    - build-sayonara
  script:
    - dist/AppImage/create-appimage.sh ${CI_COMMIT_SHORT_SHA}
  artifacts:
    paths:
      - build/*.AppImage
    expire_in: 1 day
  only:
    - merge_requests


# Snap
## Package Snap
package-snap:
  image: registry.gitlab.com/luciocarreras/sayonara-player:core20-5-99-qt-5-15-7
  stage: build
  tags:
    - luke-1
  script:
    - export LC_ALL=C.UTF-8
    - export LANG=C.UTF-8
    - export SNAP_ARCH=amd64
    - export SNAPCRAFT_BUILD_INFO=1
    - export SNAPCRAFT_SETUP_CORE=1
    - apt update -qq && apt install -y -qq git
    - echo $(snapcraft --version)
    - snapcraft --destructive-mode --enable-experimental-extensions
  artifacts:
    when: always
    paths:
      - ./*.snap
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: manual
      allow_failure: true
    - if: $CI_COMMIT_REF_NAME == 'master'


# Deploy Snap
deploy-snap:
  image: registry.gitlab.com/luciocarreras/sayonara-player:core20-5-99-qt-5-15-7
  stage: deploy
  dependencies:
    - package-snap
  tags:
    - luke-1
  script:
    - echo $SNAPCRAFT_LOGIN | base64 --decode --ignore-garbage > snapcraft.login
    - snapcraft login --with snapcraft.login
    - snapcraft push *.snap --release edge
  only:
    - master
    - tags


# PPA
deploy-ppa:
  stage: deploy
  dependencies:
    - build-sayonara
  script:
    - "curl -X POST --fail -F token=${PPA_TOKEN} -F ref=${PPA_REF_NAME} https://gitlab.com/api/v4/projects/${PPA_PROJECT}/trigger/pipeline"
  only:
    - master


## Upload ts to transifex
package-language:
  stage: packaging
  script:
    - mkdir -p tx
    - /opt/qt/bin/lupdate -no-obsolete -no-sort -locations relative -source-language en -target-language en ./src -ts tx/sayonara_lang_en.ts
    - cd tx
    - export TX_TOKEN="$TX_API_KEY"
    - export PATH=/tmp/tx:$PATH
    - tx init
    - tx add --organization sayonara --project sayonara-player --resource sayonara_lang_en --file-filter "sayonara_lang_<lang>.ts" --type QT sayonara_lang_en.ts
    - tx push
  artifacts:
    paths:
      - tx/*.ts
    expire_in: 2 days
  only:
    - master
    - tags
